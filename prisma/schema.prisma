generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["selectRelationCount"]
}

datasource mysql {
  provider = "mysql"
  url      = env("DB_URL")
}

model NoticeEvent {
  id          Int      @id @default(autoincrement())
  title       String   @mysql.VarChar(255)
  description String?  @mysql.Text
  type        Int
  activation  Boolean  @default(true)
  startDate   DateTime @map("start_date")
  endDate     DateTime @map("end_date")
  image       String

  @@map("notice_event")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  Product Product[] @relation("categoryToproduct")
  @@map("category")
}

model Product {
  id          Int      @id @default(autoincrement())
  categoryId  Int      @map("category_id")
  name        String   @mysql.VarChar(255)
  description String?  @mysql.Text
  count       Int
  price       Int
  delivery    Int
  image       String
  isDeleted   Boolean  @map("is_deleted")
  score       Int      @default(0)
  category    Category @relation("categoryToproduct", fields: [categoryId], references: [id])
  createdAt   DateTime @default(now()) @map("created_at")
  review      Review[] @relation("productToreview")
  Basket      Basket[] @relation("basketToproduct")


  @@index([categoryId], name: "product_category_fk")
  @@map("product")
}

model User {
  id       Int      @id @default(autoincrement())
  userId   String   @unique @map("user_id") @mysql.VarChar(100)
  password String   @mysql.VarChar(100)
  name     String   @mysql.VarChar(30)
  email    String   @unique
  isAdmin  Boolean  @default(false) @map("is_admin")
  Basket   Basket[] @relation("basketTouser")

  Destination Destination[] @relation("destinationTouser")
  Order       Order[]       @relation("orderTouser")
  @@map("user")
}

model Basket {
  id        Int     @id @default(autoincrement())
  userId    Int     @map("user_id")
  productId Int     @map("product_id")
  count     Int
  isDeleted Boolean @default(false)
  user      User    @relation("basketTouser", fields: [userId], references: [id])
  product   Product @relation("basketToproduct", fields: [productId], references: [id])

  @@index([userId], name: "basket_user_fk")
  @@index([productId], name: "basket_product_fk")
  @@map("basket")
}

model Destination {
  id              Int     @id @default(autoincrement())
  userId          Int     @map("user_id")
  destinationName String
  receiver        String
  mainAddress     String  @map("main_address")
  detailAddress   String  @map("detail_address")
  zoneNumber      String  @map("zone_number")
  isDefault       Boolean @map("is_default")
  user            User    @relation("destinationTouser", fields: [userId], references: [id])

  Order Order[] @relation("purchaseTodestination")
  @@index([userId], name: "destination_user_fk")
  @@map("destination")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model Review {
  id          Int     @id @default(autoincrement())
  productId   Int     @map("product_id")
  score       Int
  description String? @mysql.MediumText
  product     Product @relation("productToreview", fields: [productId], references: [id])

  @@index([productId], name: "review_product_fk")
  @@map("review")
}

model Order {
  id            String    @id
  userId        Int
  total         Int
  delivery      Int
  destinationId Int       @map("destination_id")
  list          String
  state         String
  creaetdAt     DateTime  @default(now()) @map("created_at")
  deletedAt     DateTime? @map("deleted_at")

  destination Destination @relation("purchaseTodestination", fields: [destinationId], references: [id])
  user        User        @relation("orderTouser", fields: [userId], references: [id])
  @@index([destinationId], name: "purchase_destination_fk")
  @@index([userId], name: "purchase_user_fk")
  @@map("order")
}
